{
	"info": {
		"_postman_id": "b56c1499-153a-4c13-9e92-0f49f063abfd",
		"name": "seesee",
		"description": "SeeSee API v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Register a new User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d942365-5da5-428e-95ac-0281a470ac79",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals application/json\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'application/json');"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3194fcd1-80c2-4a13-8cc4-d8d4928ffc6c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"danydodson\",\n    \"email\": \"danydodson@gmail.com\",\n    \"password\": \"W2O7%%3R3QyDMue9\",\n    \"confirm\": \"W2O7%%3R3QyDMue9\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5025/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Create User",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"Daniel Dodson\",\n    \"email\": \"dany@gmail.com\",\n    \"password\": \"W2O7%%3R3QyDMue9\",\n    \"confirm\": \"W2O7%%3R3QyDMue9\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5025/api/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5025",
									"path": [
										"api",
										"users"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67476eaf-a293-49b4-9364-6440fe837ed0",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals application/json\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"danydodson@gmail.com\",\n    \"password\": \"W2O7%%3R3QyDMue9\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5025/api/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2209c718-4696-4177-abac-2fdaab6bc6d5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2368a5bf-ef4f-4c5d-8a05-692b99fa3661",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"name": "Content-Type",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"auth"
							]
						}
					},
					"response": [
						{
							"name": "Get current user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"name": "Content-Type",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:5025/api/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5025",
									"path": [
										"api",
										"auth"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{ response: ok }"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Feeds",
			"item": [
				{
					"name": "Get all posts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fc881a22-1fcc-4c54-b7f0-c633b13ff066",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2c906dea-bb84-4b57-924b-753e77cf6408",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current users feed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af4075d4-f213-4c73-a673-8309284e90dd",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff05d145-9544-4008-a842-e684ecf1d4c0",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5025/api/mediums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"mediums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c21c8de-8a72-4775-8c2a-7587d41d2a57",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5025/api/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"tags"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Create a new post",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "771c8c25-e277-406a-9cbd-8e497e7525b1",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals application/json\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"name": "Content-Type",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uploads\": [],\n    \"title\": \"Post testing title\",\n    \"description\": \"Post testing description.\",\n    \"critique\": true,\n    \"mediums\": \"medium\",\n    \"tags\": \"tag1,tag2\",\n    \"purchasable\": true,\n    \"price\": \"1.00\",\n    \"shareable\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5025/api/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get post using (post_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "328490b6-79fc-41b3-8091-92963ec216fa",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"name": "Content-Type",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts/:post_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								":post_id"
							],
							"variable": [
								{
									"key": "post_id",
									"value": "{{post_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like post using (post_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a161600b-ba93-407f-bbd5-0223dbbd7cb5",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts/like/{{post_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								"like",
								"{{post_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlike post using (post_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb099fc6-a7c0-48b6-8c84-4312d10af863",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts/unlike/{{post_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								"unlike",
								"{{post_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add to fvorites using (post_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9bec403-b8f0-4cb0-aaa0-916da8bf4a44",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals application/json\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts/favorite/:post_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								"favorite",
								":post_id"
							],
							"variable": [
								{
									"key": "post_id",
									"value": "{{post_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove from favorites using (post_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39ed2511-33f1-4269-8a0d-f1f7edd63785",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts/favorite/:post_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								"favorite",
								":post_id"
							],
							"variable": [
								{
									"key": "post_id",
									"value": "{{post_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "903cc818-2a24-437e-b778-24ebc67be89f",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals application/json\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Post testing note\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5025/api/posts/:post_id/notes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								":post_id",
								"notes"
							],
							"variable": [
								{
									"key": "post_id",
									"value": "{{post_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Del note using (post_id, comment_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f31f33da-8458-482b-872d-3515d1e256ce",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts/:post_id/notes/:comment_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								":post_id",
								"notes",
								":comment_id"
							],
							"variable": [
								{
									"key": "post_id",
									"value": "{{post_id}}"
								},
								{
									"key": "comment_id",
									"value": "{{comment_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete post using (post_id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5059da51-74a2-427b-bd29-843651c78e48",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"name": "Content-Type",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/posts/:post_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"posts",
								":post_id"
							],
							"variable": [
								{
									"key": "post_id",
									"value": "{{post_id}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Create Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39db25b2-3b9c-4842-8713-0cc66e7c38f1",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals application/json\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bio\": \"Profile testing bio\",\n    \"website\": \"testing.com\",\n    \"status\": \"profile testing status\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5025/api/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e450d8be-4aed-44ff-be42-b9bbc4eb6018",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/profile/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"profile",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b454ce5d-69af-461e-857a-21a0ca1185fc",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5025/api/profile/user/:user_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"profile",
								"user",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "392b8662-f4a0-423e-8448-ef6e6e08d523",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5025/api/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Following a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "669a3f1e-9d47-4885-b438-851cf6247173",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals application/json\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'application/json');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/profile/user/:user_id/follow",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"profile",
								"user",
								":user_id",
								"follow"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop Following a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b0ca9c4-fc71-4fac-8ef4-21168a06b43a",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/profile/user/:user_id/follow",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"profile",
								"user",
								":user_id",
								"follow"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7a8749c-cced-43a5-9bc0-f2afbb3ede3d",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5025/api/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5025",
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8b73b90a-e6df-4851-8c43-43b69b3537bc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "42f5593a-1150-4159-82b8-a27ad13db65f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "95261409-1d84-4985-81c7-fcbf733f4480",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9e353f2a-f2ff-4584-8a18-f7ba33687ddb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}